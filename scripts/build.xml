<project name="risk-analytics" default="cruise">

    <property environment="env"/>
    <property name="GRAILS_HOME" value="${env.GRAILS_HOME}"/>
    <import file="${GRAILS_HOME}/src/grails/grails-macros.xml"/>

    <property file="application.properties"/>

    <property name="build.prod.dir" value="${user.home}/.grails/${app.grails.version}/projects/${app.name}"/>
    <property name="plugin.dir" value="${basedir}/../local-plugins/${app.name}-AR-167"/>
    <property name="classes.prod.dir" value="${build.prod.dir}/classes"/>
    <property name="plugin.classes.prod.dir" value="${build.prod.dir}/plugin-classes"/>
    <property name="dist.dir" value="dist"/>
    <property name="target.dir" value="target"/>
    <property name="doc.dir" value="docs/gapi"/>
    <property name="release.repository" value="pillarone"/>

    <condition property="grails" value="${GRAILS_HOME}/bin/grails.bat">
        <os family="windows"/>
    </condition>
    <property name="grails" value="${GRAILS_HOME}/bin/grails"/>

    <condition property="GRAILS_JVM_OPTS" value="${env.GRAILS_JVM_OPTS}" else="-Xmx1024m -XX:MaxPermSize=512m -Duser.language='en'">
        <isset property="env.GRAILS_JVM_OPTS"/>
    </condition>

    <tstamp>
        <format property="build-timestamp" pattern="dd.MM.yyyy HH:mm"/>
    </tstamp>

    <target name="init">
        <echo message="GRAILS_HOME: ${GRAILS_HOME}"/>
        <echo message="app.name: ${app.name}"/>
        <echo message="classes: ${classes.prod.dir}"/>
        <echo message="user.language: ${user.language}, user.country: ${user.country}"/>
    </target>

    <target name="cruise" depends="clean,compile,test"
            description="to be started by the CruiseControl build server"/>


    <target name="clean" depends="init" description="--> Cleans a Grails application">
        <delete dir="${target.dir}/work"/>
        <delete dir="${dist.dir}"/>

        <mkdir dir="${dist.dir}"/>
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg value="clean"/>
            <arg value="--non-interactive"/>
            <env key="GRAILS_HOME" value="${GRAILS_HOME}"/>
            <env key="JAVA_OPTS" value="${GRAILS_JVM_OPTS}"/>
        </exec>
        <delete verbose="true">
            <fileset dir="." includes="*Db.script"/>
            <fileset dir="." includes="**Db.properties"/>
            <fileset dir="." includes="*.tsl"/>
            <fileset dir="." includes="*.log"/>
        </delete>
    </target>

    <target name="cleanLocal" depends="init" description="--> Cleans a Grails application">
        <delete dir="${dist.dir}"/>

        <mkdir dir="${dist.dir}"/>
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg value="cleanLocal"/>
            <arg value="--non-interactive"/>
            <env key="GRAILS_HOME" value="${GRAILS_HOME}"/>
            <env key="JAVA_OPTS" value="${GRAILS_JVM_OPTS}"/>
        </exec>
        <delete verbose="true">
            <fileset dir="." includes="*Db.script"/>
            <fileset dir="." includes="**Db.properties"/>
            <fileset dir="." includes="*.tsl"/>
            <fileset dir="." includes="*.log"/>
        </delete>
    </target>

    <target name="clean-plugins"
            description="Removes all plugins files from the plugin dir. Useful for build servers to avoid grails trying to uninstall an old plugin after an upgrade.">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${plugin.dir}" includes="**/*"/>
        </delete>
    </target>


    <target name="refresh-dependencies" depends="init" description="--> refrehes all the dependencies">
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg value="refresh-dependencies"/>
            <arg value="--non-interactive"/>
            <arg value="--verbose"/>
            <env key="GRAILS_HOME" value="${GRAILS_HOME}"/>
            <env key="JAVA_OPTS" value="${GRAILS_JVM_OPTS}"/>
        </exec>
    </target>

    <target name="compile" depends="init" description="--> Compiles a Grails application">
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg value="compile"/>
            <arg value="--non-interactive"/>
            <arg value="--verbose"/>
            <env key="GRAILS_HOME" value="${GRAILS_HOME}"/>
            <env key="JAVA_OPTS" value="${GRAILS_JVM_OPTS}"/>
        </exec>
    </target>


    <target name="stats" depends="init" description="--> grails stats">
        <grails command="stats"/>
    </target>

    <target name="_beforeTest" />
    <target name="_beforeReleasePlugin" />

    <target name="test" depends="init" description="--> Run a Grails applications unit tests">
        <antcall target="_beforeTest"/>
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg value="test-app"/>
            <!--<arg value="-coverage"/>-->
            <arg value="--non-interactive"/>
            <!--<arg value="-echoOut"/>-->
            <env key="GRAILS_HOME" value="${GRAILS_HOME}"/>
            <env key="JAVA_OPTS" value="${GRAILS_JVM_OPTS}"/>
        </exec>
        <copy todir="${dist.dir}">
            <fileset dir="target" includes="test-reports/"/>
        </copy>
    </target>

    <target name="release-plugin" description="Releases the plugin in the configured repository.">
        <antcall target="_beforeReleasePlugin"/>
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg value="--non-interactive"/>
            <arg value="publish-plugin"/>
            <arg value="--no-overwrite"/>
            <env key="GRAILS_HOME" value="${GRAILS_HOME}"/>
        </exec>
    </target>

    <target name="doc" depends="init" description=" combined groovy and javadoc">
        <grails command="doc"/>
        <copy todir="${doc.dir}">
            <fileset dir="${doc.dir}/src/java"/>
        </copy>
        <copy todir="${doc.dir}">
            <fileset dir="${doc.dir}/src/groovy"/>
        </copy>
    </target>

    <target name="standalone-compile" depends="init" description="--> Run a Grails applications unit tests">
        <exec executable="${grails}" failonerror="true" resolveexecutable="true">
            <arg value="jar -destination=out/production/${app.name}"/>
            <env key="GRAILS_HOME" value="${GRAILS_HOME}"/>
            <arg value="--non-interactive"/>
            <env key="JAVA_OPTS" value="${GRAILS_JVM_OPTS}"/>
        </exec>
    </target>

</project>
